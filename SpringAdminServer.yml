

# Info
info:
  component: Spring Admin Server


# Server Properties
server:
  port: ${SERVER_PORT:8760}


# App name
spring:
  application:
    name: spring-admin-server
  config:
    name: SpringAdminServer


  # Spring boot admin config
  #Don't ignore headers, oauth2 secured endpoints require Authorization and Cookies to work
  boot:
    admin:
      ui:
        public-url: ${SPRING_BOOT_ADMIN_PUBLIC_URL:http://localhost:8080/admin/}
      instance-proxy:
        ignored-headers:


# Security Config
security:
  token-services:
    client-id: ${OAUTH2_TOKEN_CLIENT_ID:default_oauth2_client_id}
    client-secret: ${OAUTH2_TOKEN_CLIENT_SECRET:QWERTY74gray75raccoon634}
    check-token-url: ${OAUTH2_TOKEN_CHECK_TOKEN_URL:http://localhost:8081/auth-ms/oauth/check_token}
  jwt:
    local-resource-id: spring-admin-resource-id


# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: '*'
      base-path: /actuator


# Eureka client properties
eureka:
  instance:
    metadataMap:
      instanceId: ${spring.application.name}:${spring.application.instance_id:${random.int}}
      management:
        context-path: ${server.servlet.context-path}/actuator
        port: ${server.port}
    #nonSecurePort: 8088
    statusPageUrlPath: ${server.servlet.context-path}/actuator/info
    healthCheckUrlPath: ${server.servlet.context-path}/actuator/health
    leaseRenewalIntervalInSeconds: 5
    lease-expiration-duration-in-seconds: 5
  client:
    enabled: true
    serviceUrl:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka}
    instance:
      metadataMap:
        instanceId: ${spring.application.name}:${server.port}
    registerWithEureka: true
    healthcheck:
      enabled: true
    fetchRegistry: true
    registryFetchIntervalSeconds: 5
