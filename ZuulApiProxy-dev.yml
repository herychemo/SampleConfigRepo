
info:
  component: Zuul Proxy App

server:
  port: ${SERVER_PORT:8081}
  servlet:
    context-path: /

spring:
  application:
    name: zuul-api-proxy
  config:
    name: ZuulApiProxy

  # Logging
  sleuth:
    sampler:
      probability: 0.2  # 20.0% Sampling
  zipkin:
    sender:
      type: web
    enabled: ${ZIPKIN_ENABLED:true}
    base-url: ${ZIPKIN_SERVER:http://localhost:9411/}

  logging:
    logstash:
      url: ${LOGSTASH_URL:localhost}
      tcp-port: ${LOGSTASH_TCP_PORT:5000}
      tcp-input: ${logging.logstash.url}:${logging.logstash.tcp-port}


  rabbitmq:
    host: ${RABBIT_MQ_URL:localhost}
    port: ${RABBIT_MQ_PORT:5672}
    username: ${RABBIT_MQ_USERNAME:guest}
    password: ${RABBIT_MQ_PASSWORD:guest}



management:
  endpoints:
    web:
      exposure:
        include: info,health,hystrix.stream
      base-path: /actuator
  endpoint:
    health:
      show-details: always


zuul:
  add-proxy-headers: true
  routes:
    microservices-accounts-ms:
      path: /accounts-ms/**
      serviceId: accounts-ms
      stripPrefix: false
      sensitiveHeaders: Cookie,Set-Cookie
    microservices-auth-ms:
      path: /auth-ms/**
      serviceId: auth-ms
      stripPrefix: false
      # Remove Authorization from sensitiveHeaders
      sensitiveHeaders: Cookie,Set-Cookie


eureka:
  instance:
    metadataMap:
      instanceId: ${spring.application.name}:${spring.application.instance_id:${random.int}}
      management:
        context-path: ${server.servlet.context-path}/actuator
        port: ${server.port}
    #nonSecurePort: 8088
    statusPageUrlPath: ${server.servlet.context-path}/actuator/info
    healthCheckUrlPath: ${server.servlet.context-path}/actuator/health
  client:
    serviceUrl:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka}
    instance:
      metadataMap:
        instanceId: ${spring.application.name}:${server.port}
    registerWithEureka: true
    healthcheck:
      enabled: true
    fetchRegistry: true


error:
  whitelabel:
    enabled: false
